/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import PSO_Algorithms.PSO;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.InputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileView;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.text.DefaultCaret;
import psoformarc21.PSOforMARC21;
import json.Configuracion;
import json.Pesos;
import org.jvnet.substance.skin.SubstanceRavenGraphiteGlassLookAndFeel;

/**
 *
 * @author Joker
 */
public class Visual extends javax.swing.JFrame {

    public static long time;
    public static long SumTime;
    private JFileChooser fileChoser;
    private ArrayList<Vector<String>> dlists;
    private Configuracion conf;
    private Vector<String> olists;
    private ArrayList<String[]> flists;
    private int levels;
    private int[] cantForLevels;
    public static Boolean run = false;
    public static Object b = new Object();

    /**
     * Creates new form Visual
     */
    public Visual() {

//        try {
        initComponents();
        setLocationRelativeTo(null);
        initValues();
        setVisible(true);
        new Thread(new Runnable() {

            @Override
            public void run() {
                try {
//            
                    javax.swing.UIManager.setLookAndFeel(new SubstanceRavenGraphiteGlassLookAndFeel());

                } catch (javax.swing.UnsupportedLookAndFeelException ex) {

                }
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jsCantN = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jDialog2 = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jlOrigen = new javax.swing.JList();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jDialog3 = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jDialog4 = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog5 = new javax.swing.JDialog();
        jpbcancel = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        sng = new javax.swing.JSpinner();
        snp = new javax.swing.JSpinner();
        snt = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        gProgressBar1 = new GUI.GProgressBar();
        jlp = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtexArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDialog1.setTitle("Paso 1");
        jDialog1.setAlwaysOnTop(true);
        jDialog1.setModal(true);
        jDialog1.setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable1);

        jButton1.setText("Siguiente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Desmarcar Todos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jsCantN.setModel(new javax.swing.SpinnerNumberModel(3, 2, 10, 1));

        jLabel3.setText("Niveles de Importancia");

        jLabel4.setText("Selecione los campos a los que se les desea hallar el grado de importancia");

        jButton4.setText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo de material");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Libros", "Archivos de computadora", "Partituras", "Mapas", "Publicaciones seriadas", "Material mixto", "Grabaciones sonoras", "Material visual" }));

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jsCantN, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jButton4)
                        .addGap(124, 124, 124)
                        .addComponent(jButton1))
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jsCantN, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton1))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jDialog2.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDialog2.setTitle("Paso 2");
        jDialog2.setAlwaysOnTop(true);
        jDialog2.setModal(true);
        jDialog2.setResizable(false);

        jLabel5.setText("a");

        jLabel6.setText("a");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jlOrigen.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jlOrigen);

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(32767, 225));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton14.setText("Siguiente");
        jButton14.setEnabled(false);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Cancelar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton7.setText("Anterior");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jButton15)
                .addGap(121, 121, 121)
                .addComponent(jButton7)
                .addGap(109, 109, 109)
                .addComponent(jButton14)
                .addContainerGap(189, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton15)
                    .addComponent(jButton7)
                    .addComponent(jButton14))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jDialog3.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDialog3.setTitle("Paso 3");
        jDialog3.setModal(true);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setAutoscrolls(false);
        jScrollPane2.setViewportView(jTextArea2);

        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Guardar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Anterior");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jDialog3Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jButton3)
                .addGap(75, 75, 75)
                .addComponent(jButton6)
                .addGap(57, 57, 57)
                .addComponent(jButton5)
                .addContainerGap(187, Short.MAX_VALUE))
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        jDialog4.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDialog4.setModal(true);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Libros");
        jPanel3.add(jRadioButton1);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Publicaciones seriadas");
        jPanel3.add(jRadioButton2);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Partituras");
        jPanel3.add(jRadioButton3);

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Mapas");
        jPanel3.add(jRadioButton4);

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setText("Archivos de computadora");
        jPanel3.add(jRadioButton5);

        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setText("Grabaciones sonoras");
        jPanel3.add(jRadioButton6);

        buttonGroup1.add(jRadioButton7);
        jRadioButton7.setText("Material visual");
        jPanel3.add(jRadioButton7);

        buttonGroup1.add(jRadioButton8);
        jRadioButton8.setText("Material mixto");
        jPanel3.add(jRadioButton8);

        jButton8.setText("Siguiente");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Cancelar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jDialog4Layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jButton8)))
                .addContainerGap())
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton8))
                .addContainerGap())
        );

        jDialog5.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDialog5.setTitle("Cancelando ...");
        jDialog5.setModal(true);

        jpbcancel.setIndeterminate(true);

        javax.swing.GroupLayout jDialog5Layout = new javax.swing.GroupLayout(jDialog5.getContentPane());
        jDialog5.getContentPane().setLayout(jDialog5Layout);
        jDialog5Layout.setHorizontalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpbcancel, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
        );
        jDialog5Layout.setVerticalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpbcancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(851, 564));
        setSize(new java.awt.Dimension(853, 364));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setMaximumSize(new java.awt.Dimension(20000, 134));
        jPanel1.setMinimumSize(new java.awt.Dimension(840, 134));
        jPanel1.setPreferredSize(new java.awt.Dimension(770, 134));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sng.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(2), null, Integer.valueOf(10)));
        sng.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Número de Generaciones"));
        jPanel1.add(sng, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 189, -1));

        snp.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(10), null, Integer.valueOf(10)));
        snp.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Número de Partículas"));
        jPanel1.add(snp, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 188, -1));

        snt.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        snt.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Número de Pruebas Independientes"));
        jPanel1.add(snt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 220, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/img/1.png"))); // NOI18N
        jLabel2.setText("Run");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, 120, 110));

        gProgressBar1.setBorder(javax.swing.BorderFactory.createTitledBorder("Progreso"));
        jPanel1.add(gProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 400, -1));

        jlp.setText("Tiempo Estimado:   0 Segundos");
        jPanel1.add(jlp, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, 220, 30));

        getContentPane().add(jPanel1);

        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(23, 230));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(166, 230));

        JtexArea1.setEditable(false);
        JtexArea1.setColumns(20);
        JtexArea1.setRows(5);
        JtexArea1.setAutoscrolls(false);
        JtexArea1.setHighlighter(null);
        jScrollPane1.setViewportView(JtexArea1);

        getContentPane().add(jScrollPane1);

        jMenu1.setText("Configuración");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Por defecto");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenu3.setText("Nueva");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Abrir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Diseñar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenu1.add(jMenu3);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Exportar Pesos");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        synchronized (run) {
            if (run) {
//                
//                new Thread(new Runnable() {
//                    @Override
//                    public void run() {
//                        jDialog5.pack();
//                        jDialog5.setLocationRelativeTo(null);
//                        jDialog5.setVisible(true);
//                    }
//                }).start(); 
                run = false;
                return;
            } else {
                time = 0;
                new Thread(new Runnable() {

                    @Override
                    public void run() {
                        synchronized (run) {
                            run = true;
                        }
                        JtexArea1.setText("");
                        DefaultCaret caret = (DefaultCaret) JtexArea1.getCaret();
                        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
                        jLabel2.setIcon(new ImageIcon(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("img/2.png"))));
//                        jLabel2.repaint();
                        if (cantForLevels == null) {
                            JtexArea1.append("\nAdvertencia: No a definido ninguna configuracion valida\n Cree o abra una para continuar");
                        } else {
                            Integer np = (Integer) snp.getValue();
                            Integer ng = (Integer) sng.getValue();
                            Integer nt = (Integer) snt.getValue();
                            snp.setEnabled(false);
                            sng.setEnabled(false);
                            snt.setEnabled(false);
                            jMenu1.setEnabled(false);

//                            jMenuBar1.setVisible(false);
                            gProgressBar1.setValue(0);
                            gProgressBar1.setMinValue(0);
                            gProgressBar1.setMaxValue(ng * nt);
                            SumTime = 0;
                            int p = 6;
                            PSOforMARC21.out = JtexArea1;
                            PSO.putParameter("arrOfLevels", cantForLevels);
                            PSO.putParameter("pb", gProgressBar1);
                            PSO.putParameter("jlp", JtexArea1);

                            conf.setP(PSOforMARC21.runAlgorithm(np, ng, p, nt));
//                    jTextArea1.append("\nMejor de todos " + gbest);
                        }
                        Image img = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("img/1.png"));
                        jLabel2.setIcon(new ImageIcon(img));
                        jDialog5.setVisible(false);
                        snp.setEnabled(true);
                        sng.setEnabled(true);
                        snt.setEnabled(true);
                        jMenu1.setEnabled(true);

//                        jMenuBar1.setVisible(true);
                        jLabel2.setEnabled(true);
                        synchronized (run) {
                            run = false;
                        }
                    }
                }).start();

                new Thread(new Runnable() {

                    @Override
                    public void run() {
                        while (true) {
                            synchronized (b) {
                                if (time != 0) {

                                    long t = time;
                                    final Calendar cal = Calendar.getInstance();
                                    cal.setTimeInMillis(t);
                                    final SimpleDateFormat sdfParser = new SimpleDateFormat("HH:mm:ss", new Locale("ES"));
                                    String[] sTime = sdfParser.format(cal.getTime()).split(":");

                                    t = (t / (3600000));
                                    String u = "";
                                    if (t > 0) {
                                        u = " Horas";
                                    } else {
                                        u = (sTime[1].equals("00")) ? " Segundos" : " Minutos";
                                    }

                                    String c = "Tiempo Estimado:  " + ((u.equals(" Horas")) ? (t + ":") : "") + ((u.equals(" Segundos")) ? "" : sTime[1] + ":") + sTime[2] + u;

//                                        JOptionPane.showMessageDialog(Visual.this,c +u);
//                                        break;
                                    jlp.setText(c);
                                    JtexArea1.repaint();

                                }
                            }
                            synchronized (run) {
                                if (!run) {
                                    jlp.setText("Tiempo Estimado:  0:00:00 segundos");
                                    jDialog5.setVisible(false);
                                    break;
                                }
//                                try {
//                                    Thread.sleep(2000);
//                                } catch (InterruptedException ex) {
//                                   
//                                }
                            }

                        }
                    }
                }).start();
            }
        }


    }//GEN-LAST:event_jLabel2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        allCheckbox();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        synchronized (run) {
            if (run) {
                run = false;
            }
        }
        mostrarConfig1();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        jDialog2.setVisible(false);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        mostrarConfig2(); // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jDialog1.setVisible(false);         // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        mostrarConfig3();   // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jDialog2.setVisible(false);
        jDialog1.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jDialog3.setVisible(false);
        jDialog2.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jDialog3.setVisible(false);       // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        guardar();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        synchronized (run) {
            if (run) {
                run = false;
            }
        }

        cargar();          // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        synchronized (run) {
            if (run) {
                run = false;
            }
        }
        export(); // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        jDialog4.pack();
        jDialog4.setLocationRelativeTo(null);
        jDialog4.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jDialog4.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        JRadioButton[] arr = new JRadioButton[]{jRadioButton1, jRadioButton2, jRadioButton3, jRadioButton4, jRadioButton5, jRadioButton6, jRadioButton7, jRadioButton8};
        for (JRadioButton rb : arr) {
            if (rb.isSelected()) {
                try {
                    String mat = rb.getText();
                    InputStream in = this.getClass().getResourceAsStream("Config/" + mat);
                    conf = new Configuracion(in);
                    dlists = conf.getLlevels();
                    levels = conf.getLevels();
                    cantForLevels = conf.getCantForLevels();
                    DefaultCaret caret = (DefaultCaret) JtexArea1.getCaret();
                    caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
                    JtexArea1.setText("");
                    JtexArea1.append("Los campos  para " + conf.getMaterial() + " fueron agrupados en " + levels + " Niveles de Importancias\n De mayor importancia a menor\n");

                    for (int i = 0; i < dlists.size(); i++) {
                        Vector<String> li = dlists.get(i);
                        JtexArea1.append("\tNivel: " + (i + 1) + " con " + li.size() + " campos\n");
                        for (String tag : li) {
                            JtexArea1.append("\n\t\t " + tag);
                        }
                        JtexArea1.append("\n");
                    }

                    break;
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
        jDialog4.setVisible(false);
//       mostrarConfig3();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
        new Visual();
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea JtexArea1;
    private javax.swing.ButtonGroup buttonGroup1;
    private GUI.GProgressBar gProgressBar1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JDialog jDialog5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JList jlOrigen;
    private javax.swing.JLabel jlp;
    private javax.swing.JProgressBar jpbcancel;
    private javax.swing.JSpinner jsCantN;
    private javax.swing.JSpinner sng;
    private javax.swing.JSpinner snp;
    private javax.swing.JSpinner snt;
    // End of variables declaration//GEN-END:variables

//    private ArrayList<JList<String>> djlists;
    private void initValues() {
        try {
            flists = new ArrayList<>();
            Scanner s = new Scanner(this.getClass().getResourceAsStream("fieldsMARC21.ini"));
            while (s.hasNextLine()) {
                flists.add(s.nextLine().split(";"));
            }
            fileChoser = new JFileChooser();
        } catch (Exception ex) {

        }
    }

    private void mostrarConfig1() {

        DefaultTableModel parte = new DefaultTableModel(new String[]{"Seleccionado", "Etiqueta", "Descripción"}, 0);;

        for (String[] row : flists) {
//            if (row.length==1) {
//                continue;
//            }
            Object[] temp = new Object[3];
            temp[0] = (Boolean) true;
            temp[1] = row[0];
            temp[2] = row.length == 2 ? row[1] : " ";
            parte.addRow(temp);

        }
        cantForLevels = null;
        jTable1.setModel(parte);
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(columnModel.getColumnCount() - 1).setPreferredWidth(700);

        //Se crea el JCheckBox en la columna indicada en getColumn, en este caso, la primera columna
        jTable1.getColumnModel().getColumn(0).setCellEditor(new Celda_CheckBox());
        //para pintar la columna con el CheckBox en la tabla, en este caso, la primera columna
        jTable1.getColumnModel().getColumn(0).setCellRenderer(new Render_CheckBox());
        jDialog1.pack();
        jDialog1.setLocationRelativeTo(null);
        jDialog1.setVisible(true);
    }

    private void mostrarConfig2() {
        jButton14.setEnabled(false);
        TableModel model = jTable1.getModel();
        int rowCount = model.getRowCount();
        levels = (Integer) jsCantN.getValue();
        olists = new Vector<>(rowCount);
//        djlists = new ArrayList<>(levels);
        dlists = new ArrayList<>(levels);
        for (int i = 0; i < rowCount; i++) {
            if ((Boolean) model.getValueAt(i, 0)) {
                olists.add((String) model.getValueAt(i, 1));
            }
        }
        if (olists.size() < levels) {
            JOptionPane.showMessageDialog(jDialog1, "Seleccione al menos tantos campos, como niveles de completitud haya definido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        jlOrigen.setListData(olists);

//        jlOrigen.setOpaque(true);
        jlOrigen.setSelectedIndex(0);
        jLabel5.setText(olists.size() + " Campos sin ubicar ");
        jLabel6.setText("0 Campos ubicados ");
        jTabbedPane1.removeAll();

        for (int i = 1; i <= levels; i++) {
            final int pos = i - 1;
            JPanel ni = new JPanel();
            JPanel pB = new JPanel();
            JButton add = new JButton("-->>");
            JButton addAll = new JButton(">>>>");
            JButton delAll = new JButton("<<<<");
            JButton del = new JButton("<<--");
            JScrollPane scr = new JScrollPane();
            JList<String> jl = new JList();

            Vector<String> dListI = new Vector<>();
            dlists.add(dListI);

            add.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    List selectedValuesList = jlOrigen.getSelectedValuesList();
                    if (olists.isEmpty() || selectedValuesList.isEmpty()) {
                        return;
                    }

                    dListI.addAll(selectedValuesList);
                    olists.removeAll(selectedValuesList);

                    jlOrigen.repaint();
                    jl.setListData(dListI);

                    boolean enable = true;
                    if (olists.isEmpty()) {
                        for (int j = 0; j < dlists.size(); j++) {
                            if (dlists.get(j).isEmpty()) {
                                enable = false;
                                break;
                            }
                        }
                    } else {
                        enable = false;
                    }

                    jButton14.setEnabled(enable);
                    jLabel6.setText(dlists.get(pos).size() + " Campos en el Nivel " + (pos + 1));
                    jLabel5.setText(olists.size() + " Campos sin ubicar ");

                }
            });
            del.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {

                    List<String> selectedValuesList = jl.getSelectedValuesList();
                    if (dListI.isEmpty() || selectedValuesList.isEmpty()) {
                        return;
                    }

                    olists.addAll(selectedValuesList);
                    dListI.removeAll(selectedValuesList);

                    jlOrigen.repaint();
                    jl.setListData(dListI);

                    jLabel6.setText(dlists.get(pos).size() + " Campos en el Nivel " + (pos + 1));
                    jLabel5.setText(olists.size() + " Campos sin ubicar ");
                    jButton14.setEnabled(false);
                    if (!dListI.isEmpty()) {
                        jl.setSelectedIndex(0);
                    }

                }
            });
            addAll.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {

                    if (olists.isEmpty()) {
                        return;
                    }

                    dListI.addAll(olists);
                    olists.removeAllElements();

                    jlOrigen.repaint();
                    jl.setListData(dListI);

                    boolean enable = true;
                    if (olists.isEmpty()) {
                        for (int j = 0; j < dlists.size(); j++) {
                            if (dlists.get(j).isEmpty()) {
                                enable = false;
                                break;
                            }
                        }
                    } else {
                        enable = false;
                    }

                    jButton14.setEnabled(enable);
                    jLabel6.setText(dlists.get(pos).size() + " Campos en el Nivel " + (pos + 1));
                    jLabel5.setText(olists.size() + " Campos sin ubicar ");
                    if (!olists.isEmpty()) {
                        jlOrigen.setSelectedIndex(0);
                    }
                }
            });
            delAll.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {

                    if (dListI.isEmpty()) {
                        return;
                    }

                    olists.addAll(dListI);
                    dListI.removeAllElements();

                    jlOrigen.repaint();
                    jl.setListData(dListI);

                    jLabel6.setText(dlists.get(pos).size() + " Campos en el Nivel " + (pos + 1));
                    jLabel5.setText(olists.size() + " Campos sin ubicar ");
                    jButton14.setEnabled(false);
                    if (!dListI.isEmpty()) {
                        jl.setSelectedIndex(0);
                    }
                }
            });

            pB.setLayout(new javax.swing.BoxLayout(pB, javax.swing.BoxLayout.Y_AXIS));
            pB.add(add);
            pB.add(new JLabel(" "));
            pB.add(addAll);
            pB.add(new JLabel(" "));
            pB.add(delAll);
            pB.add(new JLabel(" "));
            pB.add(del);
            scr.setViewportView(jl);
            ni.setLayout(new javax.swing.BoxLayout(ni, javax.swing.BoxLayout.X_AXIS));
            ni.add(pB);
            ni.add(scr);
            jTabbedPane1.addTab("Nivel " + i, ni);
        }
        jTabbedPane1.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e); //To change body of generated methods, choose Tools | Templates.
                int pos = jTabbedPane1.getSelectedIndex();
                String name = jTabbedPane1.getTitleAt(pos);
                jLabel6.setText(dlists.get(pos).size() + " Campos en el " + name);

            }

        });

        jDialog2.pack();
        jDialog2.setLocationRelativeTo(null);
        jDialog1.setVisible(false);
        jDialog2.setVisible(true);
    }

    private void allCheckbox() {
        boolean b = jButton2.getText().equals("Selecionar Todos");
        TableModel model = jTable1.getModel();
        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            model.setValueAt(b, i, 0);
        }
        jButton2.setText(b ? "Desmarcar Todos" : "Seleccionar Todos");
    }

    private void mostrarConfig3() {
        DefaultCaret caret = (DefaultCaret) jTextArea2.getCaret();
        caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);

        jTextArea2.setText("");

        jTextArea2.append("Los campos fueron agrupados en " + levels + " Niveles de Importancia\n De mayor importancia a menor\n");

        for (int i = 0; i < dlists.size(); i++) {
            Vector<String> li = dlists.get(i);
            jTextArea2.append("\tNivel: " + (i + 1) + " con " + li.size() + " campos\n");
            for (String tag : li) {
                jTextArea2.append("\n\t\t " + tag);
            }
            jTextArea2.append("\n");
        }

        jTextArea2.append("\n");

        jDialog3.pack();
        jDialog3.setLocationRelativeTo(null);
        jScrollPane2.setViewportView(jTextArea2);
        jDialog2.setVisible(false);
        jDialog3.setVisible(true);
    }

    private void cargar() {

        fileChoser = new JFileChooser(".");

        fileChoser.setFileFilter(new FileNameExtensionFilter("File configuration for PSO", "pso"));

        int aprov = fileChoser.showOpenDialog(jDialog3);
        if (aprov == JFileChooser.APPROVE_OPTION) {
            try {

                conf = new Configuracion(fileChoser.getSelectedFile());
                dlists = conf.getLlevels();
                levels = conf.getLevels();
                cantForLevels = conf.getCantForLevels();
                DefaultCaret caret = (DefaultCaret) JtexArea1.getCaret();
                caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
                JtexArea1.setText("");
                JtexArea1.append("Los campos  para " + conf.getMaterial() + " fueron agrupados en " + levels + " Niveles de Importancia\n De mayor importancia a menor\n");

                for (int i = 0; i < dlists.size(); i++) {
                    Vector<String> li = dlists.get(i);
                    JtexArea1.append("\tNivel: " + (i + 1) + " con " + li.size() + " campos\n");
                    for (String tag : li) {
                        JtexArea1.append("\n\t\t " + tag);
                    }
                    JtexArea1.append("\n");
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(jDialog3, "El archivo no se pudo leer ", "", 1);
            }
        }

    }

    private void guardar() {
        fileChoser.setFileFilter(new FileNameExtensionFilter("File configuration for PSO", "pso"));
        int aprov = fileChoser.showSaveDialog(jDialog3);
        if (aprov == JFileChooser.APPROVE_OPTION) {
            try {
                String absolutePath = fileChoser.getSelectedFile().getAbsolutePath();

                if (!absolutePath.endsWith(".pso")) {
                    absolutePath += ".pso";
                }
                conf = new Configuracion((String) jComboBox1.getSelectedItem(), dlists);
                cantForLevels = conf.getCantForLevels();
                levels = conf.getLevels();
                dlists = conf.getLlevels();
                conf.write(new File(absolutePath));
                JOptionPane.showMessageDialog(this, "El archivo fue guardado correctamente" + "\n en el fichero: \n" + absolutePath);

                JtexArea1.setText("");
                JtexArea1.append("Los campos  para " + conf.getMaterial() + " fueron agrupados en " + levels + " Niveles de Importancia\n De mayor importancia a menor\n");

                for (int i = 0; i < dlists.size(); i++) {
                    Vector<String> li = dlists.get(i);
                    JtexArea1.append("\tNivel: " + (i + 1) + " con " + li.size() + " campos\n");
                    for (String tag : li) {
                        JtexArea1.append("\n\t\t " + tag);
                    }
                    JtexArea1.append("\n");

                }
                jScrollPane1.setViewportView(JtexArea1);

            } catch (Exception ex) {

                JOptionPane.showMessageDialog(this,
                        "El archivo no se pudo guardar", "", 1);
            }
            jDialog3.setVisible(false);
        }
    }

    private void export() {
        if (conf == null || conf.getP() == null) {
            JOptionPane.showMessageDialog(this, "No se han calculado los pesos de los campos ", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        fileChoser = new JFileChooser();
        fileChoser.setFileFilter(new FileNameExtensionFilter("File configuration for field", "field"));
        String absolutePath = "";
        int aprov = fileChoser.showSaveDialog(this);
        if (aprov == JFileChooser.APPROVE_OPTION) {
            try {
                Pesos p = null;
                absolutePath = fileChoser.getSelectedFile().getAbsolutePath();

                if (fileChoser.getSelectedFile().exists()) {
//                    System.out.println("existe");
                    p = new Pesos(fileChoser.getSelectedFile());

                }

                if (!absolutePath.endsWith(".field")) {
                    absolutePath += ".field";
                }

                double[] genome = conf.getP().getGenome();
                int pos = 0;
                if (p == null) {
                    p = new Pesos();
                }
                JtexArea1.setText("");

                DefaultCaret caret = (DefaultCaret) JtexArea1.getCaret();
                caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
                String material = conf.getMaterial();
                ArrayList<Vector<String>> dl = conf.getLlevels();
                JtexArea1.append(material);
                for (int i = 0; i < dl.size(); i++) {
                    Vector<String> l = dl.get(i);
                    for (int j = 0; j < l.size(); j++) {
                        p.putPesos(material, l.get(j), genome[pos++]);
                        JtexArea1.append("\n\t" + l.get(j) + " : " + genome[pos - 1]);
                    }
                }

                p.write(new File(absolutePath));
                int showConfirmDialog = JOptionPane.showConfirmDialog(this, "El archivo fue guardado correctamente" + "\n en el fichero: \n" + absolutePath + "\n ¿Desea abrir la carpeta contenedora? \n", "OK", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                if (showConfirmDialog == JOptionPane.YES_OPTION) {
                    Desktop.getDesktop().open(new File(absolutePath).getParentFile());
                }
            } catch (Exception ex) {
                ex.printStackTrace();
                new File(absolutePath).delete();
                JOptionPane.showMessageDialog(this,
                        "El archivo no se pudo guardar", "", JOptionPane.ERROR_MESSAGE);
            }

        }

    }
}
